diff --git a/config.def.h b/config.def.h
index 1c0b587..1d2f3a4 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,7 +1,10 @@
 /* See LICENSE file for copyright and license details. */
 
+#include <X11/XF86keysym.h>
+
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int gappx     = 5;        /* gaps between windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
@@ -28,7 +31,6 @@ static const Rule rules[] = {
 	 */
 	/* class      instance    title       tags mask     isfloating   monitor */
 	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
 };
 
 /* layout(s) */
@@ -44,7 +46,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -55,35 +57,62 @@ static const Layout layouts[] = {
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
 
 /* commands */
-static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *rofi[]       = { "rofi", "-show", "run", NULL };
+static const char *term[]       = { "st", NULL };
+static const char *lockscreen[] = { "light-locker-command", "-l", NULL };
+
+// audio
+static const char *playtoggle[] = { "playerctl", "play-pause", NULL };
+static const char *playnext[]   = { "playerctl", "next", NULL };
+static const char *playprev[]   = { "playerctl", "previous", NULL };
+
+// volume
+static const char *upvol[]   = { "amixer", "-D", "pulse", "set", "Master", "5%+", NULL };
+static const char *downvol[] = { "amixer", "-D", "pulse", "set", "Master", "5%-", NULL };
+static const char *mutevol[] = { "amixer", "-D", "pulse", "set", "Master", "1+", "toggle", NULL };
+
+// brightness
+static const char *upbright[]   = { "backlight_control", "+5", NULL };
+static const char *downbright[] = { "backlight_control", "-5", NULL };
 
 static Key keys[] = {
-	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	/* modifier             key                       function        argument */
+	{ MODKEY,               XK_d,                     spawn,          {.v = rofi } },
+	{ MODKEY,               XK_Return,                spawn,          {.v = term } },
+	{ MODKEY,               XK_l,                     spawn,          {.v = lockscreen} },
+	{ MODKEY,               XK_b,                     togglebar,      {0} },
+	{ MODKEY,               XK_j,                     focusstack,     {.i = +1 } },
+	{ MODKEY,               XK_k,                     focusstack,     {.i = -1 } },
+	{ MODKEY,               XK_i,                     incnmaster,     {.i = +1 } },
+	{ MODKEY,               XK_p,                     incnmaster,     {.i = -1 } },
+	{ MODKEY,               XK_h,                     setmfact,       {.f = -0.05} },
+	{ MODKEY|ShiftMask,     XK_l,                     setmfact,       {.f = +0.05} },
+	{ MODKEY|ShiftMask,     XK_Return,                zoom,           {0} },
+	{ MODKEY,               XK_Tab,                   view,           {0} },
+	{ MODKEY,               XK_q,                     killclient,     {0} },
+	{ MODKEY,               XK_t,                     setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,               XK_f,                     setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,               XK_m,                     setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,               XK_space,                 setlayout,      {0} },
+	{ MODKEY|ShiftMask,     XK_space,                 togglefloating, {0} },
+	{ MODKEY,               XK_0,                     view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,     XK_0,                     tag,            {.ui = ~0 } },
+	{ MODKEY,               XK_comma,                 focusmon,       {.i = -1 } },
+	{ MODKEY,               XK_period,                focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,     XK_comma,                 tagmon,         {.i = -1 } },
+	{ MODKEY|ShiftMask,     XK_period,                tagmon,         {.i = +1 } },
+	{ MODKEY,               XK_minus,                 setgaps,        {.i = -1 } },
+	{ MODKEY,               XK_equal,                 setgaps,        {.i = +1 } },
+	{ MODKEY|ShiftMask,     XK_equal,                 setgaps,        {.i = 0  } },
+	{ MODKEY|ShiftMask,     XK_q,                     quit,           {0} },
+	{ 0,                    XF86XK_AudioPlay,         spawn,          {.v = playtoggle } },
+        { 0,                    XF86XK_AudioNext,         spawn,          {.v = playnext } },
+        { 0,                    XF86XK_AudioPrev,         spawn,          {.v = playprev } },
+        { 0,                    XF86XK_AudioRaiseVolume,  spawn,          {.v = upvol } },
+        { 0,                    XF86XK_AudioLowerVolume,  spawn,          {.v = downvol } },
+        { 0,                    XF86XK_AudioMute,         spawn,          {.v = mutevol } },
+        { 0,                    XF86XK_MonBrightnessUp,   spawn,          {.v = upbright } },
+        { 0,                    XF86XK_MonBrightnessDown, spawn,          {.v = downbright } },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
@@ -93,7 +122,6 @@ static Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
 };
 
 /* button definitions */
@@ -103,7 +131,7 @@ static Button buttons[] = {
 	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
 	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
 	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
-	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
+	{ ClkStatusText,        0,              Button2,        spawn,          {.v = term } },
 	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
 	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
 	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
